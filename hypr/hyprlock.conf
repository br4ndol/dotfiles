
# =================================================================================
# HYPRLOCK - Configuración Maestra y Personalizada
# =================================================================================

# --- Fondo ---
background {
    # 'screenshot' toma una captura de tu escritorio actual como fondo.
    # Es la opción más elegante para una transición suave.
    path = screenshot

    # Calidad del efecto de desenfoque (blur).
    blur_passes = 4
    blur_size = 10
    noise = 0.01
    contrast = 1.1
    brightness = 0.9
}

# --- Campo de Entrada de Contraseña ---
input-field {
    size = 400, 60
    position = 0, -145
    halign = center
    valign = center

    outline_thickness = 2
    dots_size = 0.25      # Tamaño de los puntos
    dots_spacing = 0.2    # Espaciado entre puntos
    rounding = 15         # Bordes redondeados

    # Colores
    inner_color = rgba(0, 0, 0, 0.5)
    outer_color = rgb(89, 180, 250)
    font_color = rgb(220, 220, 220)
    
    # Color cuando la contraseña es correcta (verificando)
    check_color = rgb(166, 227, 161)
    
    # Color cuando la contraseña es incorrecta
    fail_color = rgb(243, 139, 168)
    fail_text = <i>$FAIL <b>($ATTEMPTS)</b></i> # Texto de fallo
    
    # Placeholder
    placeholder_text = <i> Contraseña</i>
    hide_input = false
    fade_on_empty = false
    font_family = MesloLGS Nerd Font Mono
}

# --- Mensaje de Bienvenida ---
label {
    text = 󰙊 Hola, $USER 
    color = rgba(255, 255, 255, 0.6)
    font_size = 16
    font_family = MesloLGS Nerd Font Mono

    position = 0, -85
    halign = center
    valign = center
}

image {
    path = /home/br4ndol/Pictures/profile.jpg
    size = 150
    rounding = -1
    border_size = 4
    border_color = rgb(89, 180, 250)

    # LA CLAVE: Usamos 'center' porque sabemos que funciona de forma fiable.
    halign = center
    valign = center
    
    # AHORA, aplicamos un desplazamiento vertical NEGATIVO para moverlo HACIA ARRIBA
    # desde el centro. Juega con este valor (-250, -300, etc.) hasta que
    # quede exactamente donde quieres.
    position = 0, 15

    # Mantenemos el z-index por seguridad, para que esté por encima de todo.
    zindex = 10
}



# --- Reloj ---
label {
    text = cmd[update:1000] echo "<b><big> $(date +"%H:%M") </big></b>"
    color = rgba(255, 255, 255, 0.9)
    font_size = 96
    font_family = MesloLGS NF Bold

    position = 0, 400
    halign = center
    valign = center
}

# --- Fecha ---
label {
    text = cmd[update:1000] echo "$(date +"%A, %d de %B")"
    color = rgba(255, 255, 255, 0.7)
    font_size = 20
    font_family = MesloLGS NF

    position = 0, 310
    halign = center
    valign = center
}

# =================================================================================
# WIDGET DE MÚSICA FLOTANTE - vFinal (Lógica "One-Liner" Correcta)
# =================================================================================

# --- CAPA 1: El Fondo del Widget ---
shape {
    # Solo se muestra si hay música sonando
    # El comando comprueba si playerctl devuelve algo. Si no, el tamaño es 0,0 (invisible).
    size = cmd[update:1000] bash -c "if [[ -n \"$(playerctl status 2>/dev/null)\" ]]; then echo '350, 150'; else echo '0, 0'; fi"
    
    rounding = 15
    color = rgba(49, 50, 68, 0.8)

    position = 0, 200
    halign = center
    valign = bottom
    zindex = 1
}

# --- CAPA 2: La Información de la Canción ---
label {
    # ESTA ES LA LÍNEA CLAVE:
    # Las etiquetas Pango están escritas aquí. El shell inserta la salida de playerctl DENTRO de ellas.
    text = cmd[update:1000] bash -c "if [[ \"$(playerctl status 2>/dev/null)\" =~ ^(Playing|Paused)$ ]]; then echo \"<b>$(playerctl metadata --format '{{ trunc(title, 40) }}')</b><br/><small>$(playerctl metadata --format '{{ trunc(artist, 40) }}')</small>\"; fi"

    color = rgba(255, 255, 255, 0.9)
    font_size = 18
    font_family = MesloLGS NF
    text_align = left

    position = -140, 160
    halign = center
    valign = bottom
    zindex = 2
}

# --- CAPA 3: Los Controles (Botones) ---
# Solo se muestran si hay música sonando.
label {
    text = cmd[update:1000] bash -c "if [[ -n \"$(playerctl status 2>/dev/null)\" ]]; then echo '󰒮'; fi" # Anterior
    font_size = 32
    color = rgba(255, 255, 255, 0.9)
    onclick = playerctl previous
    position = -100, 225
    halign = center
    valign = bottom
    zindex = 2
}
label {
    text = cmd[update:1000] bash -c "if [[ \"$(playerctl status 2>/dev/null)\" == \"Playing\" ]]; then echo '⏸'; else echo '▶'; fi" # Play/Pausa
    font_size = 32
    color = rgba(255, 255, 255, 0.9)
    onclick = playerctl play-pause
    position = 0, 225
    halign = center
    valign = bottom
    zindex = 2
}
label {
    text = cmd[update:1000] bash -c "if [[ -n \"$(playerctl status 2>/dev/null)\" ]]; then echo '󰒭'; fi" # Siguiente
    font_size = 32
    color = rgba(255, 255, 255, 0.9)
    onclick = playerctl next
    position = 100, 225
    halign = center
    valign = bottom
    zindex = 2
}